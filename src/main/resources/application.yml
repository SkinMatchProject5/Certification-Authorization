spring:
  application:
    name: auth-app
    
  # Profile Configuration - local 프로파일 자동 활성화
  profiles:
    active: local

  # Jackson Configuration
  jackson:
    date-format: yyyy-MM-dd'T'HH:mm:ss
    time-zone: Asia/Seoul
    serialization:
      write-dates-as-timestamps: false

  # Web Configuration
  web:
    resources:
      static-locations: classpath:/static/
      add-mappings: true
  mvc:
    throw-exception-if-no-handler-found: false

  # Database Configuration (H2 - 개발용, 파일 모드로 변경하여 데이터 유지)
  datasource:
    url: jdbc:h2:file:./data/authdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driver-class-name: org.h2.Driver
    username: sa
    password: 
    
  # H2 Console 활성화 (http://localhost:8080/h2-console)
  h2:
    console:
      enabled: true

  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: update  # 개발 시 스키마 자동 업데이트로 데이터 유지
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.H2Dialect

  # Security OAuth Configuration
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID:YOUR_GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET:YOUR_GOOGLE_CLIENT_SECRET}
            scope:
              - email
              - profile
            redirect-uri: "{baseUrl}/login/oauth2/code/google"

          naver:
            client-id: ${NAVER_CLIENT_ID:YOUR_NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET:YOUR_NAVER_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/naver"
            scope:
              - name
              - email
            client-name: Naver

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:defaultSecretKeyForDevelopmentOnly123456789}  # 환경변수 또는 기본값
  expiration: 86400  # 24시간 (초 단위)
  refresh-expiration: 604800  # 7일 (초 단위)

# CORS Configuration
cors:
  allowed-origins:
    - http://localhost:3000
    - http://localhost:5173
    - http://localhost:8081
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: "*"
  allow-credentials: true

# Server Configuration
server:
  port: 8080

# Logging Configuration
logging:
  level:
    com.example.authapp: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG